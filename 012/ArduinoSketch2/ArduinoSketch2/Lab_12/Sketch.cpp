
#include <Arduino.h>



void setup() {
	cli(); // заборона переривань, щоб на таймер не відволікався МК

	// Кожен біт регістру DDR (розмір регістру 8 біт, тобто 1 байт) відповідає за стан піна МК
	// якщо біт регістру DDR дорівнює 1, то пін МК працює як вихід і до нього можна підключати світлодіод
	// якщо біт регістру DDR дорівнює 0, то пін МК працює як вхід і до нього можна підключати кнопку
	DDRB |= (1 << PB5);              // 0010 0000 //Arduino Uno: pin 13
	DDRC |= (1 << PC1) | (1 << PC5); // 0010 0010 //Arduino Uno: A1, A5
	DDRD |= (1 << PD3) | (1 << PD7); // 1000 1000 //Arduino Uno: pin 3, pin 7

	// Кожен біт регістру PORT (розмір регістру 8 біт, тобто 1 байт) відповідає за подаваєму з МК напругу на пін МК
	// якщо біт регістру PORT дорівнює 1 (при цьому той самий біт у регістрі DDR теж дорівнює 1), то на пін МК подається +5В і світлодіод світиться
	// якщо біт регістру PORT дорівнює 0 (при цьому той самий біт у регістрі DDR теж дорівнює 1), то на пін МК подається 0В і світлодіод не світиться
	// але
	// якщо біт регістру PORT дорівнює 1 (при цьому той самий біт у регістрі DDR дорівнює 0), то відбувається підтяжка піна МК до +5В, коли кнопка не натиснута
	// якщо біт регістру PORT дорівнює 0 (при цьому той самий біт у регістрі DDR дорівнює 0), то на пін МК подається 0В, коли кнопка не натиснута
	PORTB |= (1 << PB4);              // 0001 0000 //Arduino Uno: pin 12
	PORTC |= (1 << PC0) | (1 << PC4); // 0001 0001 //Arduino Uno: A0, A4
	PORTD |= (1 << PD2) | (1 << PD6); // 0100 0100 //Arduino Uno: pin 2, pin 6

	sei(); // дозвіл переривань

	// Кожен біт регістру PIN (розмір регістру 8 біт, тобто 1 байт) зберігає в собі значення, яке подається на пін МК ззовні
	// працювати з бітом регістру PIN є сенс коли той самий біт з регістру DDR встановлено в 0 (пін МК працює як вхід)
	// при цьому, в залежності від способу підключення кнопки до піна МК, відповідний біт регістру PORT встановлено в 0 або 1
	while (1) // нескінчений цикл
	{
		asm("cli");
		(PINB & (1 << PB4)) != 0   ?   PORTB |= 1 << PB5   :   PORTB &= ~(1 << PB5);

		(PINC & (1 << PC0)) != 0   ?   PORTC |= 1 << PC1   :   PORTC &= ~(1 << PC1);
		(PINC & (1 << PC4)) != 0   ?   PORTC |= 1 << PC5   :   PORTC &= ~(1 << PC5);

		(PIND & (1 << PD2)) != 0   ?   PORTD |= 1 << PD3   :   PORTD &= ~(1 << PD3);
		(PIND & (1 << PD6)) != 0   ?   PORTD |= 1 << PD7   :   PORTD &= ~(1 << PD7);
		asm("sei");
	}
}

void loop() {
}


